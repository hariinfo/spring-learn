/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.flyway.db.psql;


import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.example.flyway.db.psql.tables.Appointment;
import org.jooq.example.flyway.db.psql.tables.FlywaySchemaHistory;
import org.jooq.example.flyway.db.psql.tables.Patient;
import org.jooq.example.flyway.db.psql.tables.Physician;
import org.jooq.example.flyway.db.psql.tables.Room;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Dummy extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>dummy</code>
     */
    public static final Dummy DUMMY = new Dummy();

    /**
     * The table <code>dummy.appointment</code>.
     */
    public final Appointment APPOINTMENT = Appointment.APPOINTMENT;

    /**
     * The table <code>dummy.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>dummy.patient</code>.
     */
    public final Patient PATIENT = Patient.PATIENT;

    /**
     * The table <code>dummy.physician</code>.
     */
    public final Physician PHYSICIAN = Physician.PHYSICIAN;

    /**
     * The table <code>dummy.room</code>.
     */
    public final Room ROOM = Room.ROOM;

    /**
     * No further instances allowed
     */
    private Dummy() {
        super("dummy", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.PATIENT_REGISTRATION_ID_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Appointment.APPOINTMENT,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Patient.PATIENT,
            Physician.PHYSICIAN,
            Room.ROOM
        );
    }
}
